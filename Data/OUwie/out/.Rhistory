angioSL_med_mod <- lm(scale(sqrt(medianSL_angios)) ~
scale(sqrt(curr_medianBodySize)) +
scale(sqrt(presNat_medianBodySize)) +
scale(I(MAT^2)) +
scale(sqrt(TempSeas)) +
scale(sqrt(AnnualPrec)) +
scale(sqrt(PrecSeas)) +
scale(CH_Mean)+
scale(sqrt(CH_PercCover)),
data = tdwg_final3)
summary(angioSL_med_mod)
vif(angioSL_med_mod) #PrecSeas > 5
p3_2 <- plot_model(angioSL_med_mod, show.intercept = F, show.values = T, show.p = T, title = "scaled sqrt(median Seed length Angiosperms)", axis.labels = c("sqrt(Percentage Cover)", "Canopy Height", "sqrt(Precipitation Seasonality)", "sqrt(Annual Precipitation)", "sqrt(Temperature Seasonality)", "(Mean Annual Temperature)^2", "sqrt(median Bodysize extinct)", "sqrt(median Bodysize extant)"))
p3_2
check_model(angioSL_med_mod)
BBMmean_med_mod <- lm(scale((log_medianFL_palms_BBMmean)) ~
scale(sqrt(curr_medianBodySize)) +
scale(sqrt(presNat_medianBodySize)) +
scale(I(MAT^2)) +
scale(sqrt(TempSeas)) +
scale(sqrt(AnnualPrec)) +
scale(sqrt(PrecSeas)) +
scale(CH_Mean)+
scale(sqrt(CH_PercCover)),
data = tdwg_final3)
summary(BBMmean_med_mod)
vif(BBMmean_med_mod) #PrecSeas > 5
p4_2 <- plot_model(BBMmean_med_mod, show.intercept = F, show.values = T, show.p = T, title = "scaled log (median BBM mean FL palms)", axis.labels = c("sqrt(Percentage Cover)", "Canopy Height", "sqrt(Precipitation Seasonality)", "sqrt(Annual Precipitation)", "sqrt(Temperature Seasonality)", "(Mean Annual Temperature)^2", "sqrt(median Bodysize extinct)", "sqrt(median Bodysize extant)"))
p4_2
check_model(BBMmean_med_mod)
BBM_MCC_med_mod <- lm(scale(exp(log_medianFL_palms_BBM_MCC)) ~
scale(sqrt(curr_medianBodySize)) +
scale(sqrt(presNat_medianBodySize)) +
scale(I(MAT^2)) +
scale(sqrt(TempSeas)) +
scale(sqrt(AnnualPrec)) +
scale(sqrt(PrecSeas)) +
scale(CH_Mean)+
scale(sqrt(CH_PercCover)),
data = tdwg_final3)
summary(BBM_MCC_med_mod)
vif(BBM_MCC_med_mod) #PrecSeas > 5
p5_2 <- plot_model(BBM_MCC_med_mod, show.intercept = F, show.values = T, show.p = T, title = "scaled median BBM MCC FL palms", axis.labels = c("sqrt(Percentage Cover)", "Canopy Height", "sqrt(Precipitation Seasonality)", "sqrt(Annual Precipitation)", "sqrt(Temperature Seasonality)", "(Mean Annual Temperature)^2", "sqrt(median Bodysize extinct)", "sqrt(median Bodysize extant)"))
p5_2
check_model(BBM_MCC_med_mod)
medLMs <- p1_2 + p2_2 + p3_2 + p4_2 +p5_2 + plot_layout(ncol = 1)
all_lms <- p1_1 + p1_2 + p2_1 + p2_2 + p3_1 + p3_2 + p4_1 + p4_2 + p5_1 + p5_2
all_lms
all_lms <- p1_1 + p1_2 + p2_1 + p2_2 + p3_1 + p3_2 + p4_1 + p4_2 + p5_1 + p5_2+ plot_layout(ncol=2)
all_lms
all_lms
pl <- c(
`(Intercept)` = "Intercept",
`scale(sqrt(curr_max95BodySize))` = "sqrt(max95 Bodysize extant)",
`scale(sqrt(presNat_max95BodySize))` = "sqrt(max95 Bodysize extinct)",
`scale(I(MAT^2))` = "(Mean Annual Temperature)^2",
`scale(sqrt(TempSeas))` = "sqrt(Temperature Seasonality)",
`scale(sqrt(AnnualPrec))` = "sqrt(Annual Precipitation)",
`scale(sqrt(PrecSeas))` = "sqrt(Precipitation Seasonality)",
`scale(CH_Mean)` = "Canopy Height",
`scale(sqrt(CH_PercCover))` = "sqrt(Percentage Cover)",
`scale(sqrt(max95FL_palms_filled))` = "sqrt(Max95 Fruit length Palms)",
`scale(sqrt(max95FW_angios))` = "sqrt(Max95 Fruit width Angiosperms)",
`scale(max95SL_angios)` = "Max95 Seed length Angiosperms)",
`scale(exp(log_max95FL_palms_BBMmean))` = "Max95 simulated Fruit length Palms (MCC tree))",
`scale(exp(log_max95FL_palms_BBM_MCC))` = "Max95 simulated Fruit length Palms (100 trees average))"
)
tab_model(
palms_max95_mod, angioFW_max95_mod, angioSL_max95_mod, BBMmean_max95_mod, BBM_MCC_max95_mod,
pred.labels = pl,
dv.labels = c("sqrt Max95 Palms", "sqrt Max95 Fruit width Angiosperms", "Max95 Seed length Angiosperms", "Max95 MCC Simulated", "Max95 100 trees Simulated"),
show.ci = F,
transform = NULL,
#file=paste(fig.dir, "max95sizes_models_transformed_new.html"),
show.intercept = F,
show.r2=T,
p.style = "stars",
show.p = T
)
p2 <- c(
`(Intercept)` = "Intercept",
`scale(sqrt(curr_medianBodySize))` = "sqrt(median Bodysize extant)",
`scale(sqrt(presNat_medianBodySize))` = "sqrt(median Bodysize extinct)",
`scale(I(MAT^2))` = "(Mean Annual Temperature)^2",
`scale(sqrt(TempSeas))` = "sqrt(Temperature Seasonality)",
`scale(sqrt(AnnualPrec))` = "sqrt(Annual Precipitation)",
`scale(sqrt(PrecSeas))` = "sqrt(Precipitation Seasonality)",
`scale(CH_Mean)` = "Canopy Height",
`scale(sqrt(CH_PercCover))` = "sqrt(Percentage Cover)",
`scale(log(medFL_palms_filled))` = "log(med Fruit length Palms)",
`scale(log(medFW_angios))` = "log(med Fruit width Angiosperms)",
`scale(sqrt(medSL_angios))` = "sqrt (med Seed length Angiosperms)",
`scale(log_medFL_palms_BBMmean)` = "log(med simulated Fruit length Palms (MCC tree))",
`scale(exp(log_medFL_palms_BBM_MCC))` = "med simulated Fruit length Palms (100 trees average))"
)
tab_model(
palms_med_mod, angioFW_med_mod, angioSL_med_mod, BBMmean_med_mod, BBM_MCC_med_mod,
pred.labels = p2,
dv.labels = c("log med Palms", "log med Fruit width Angiosperms", "sqrt med Seed length Angiosperms", "med MCC Simulated", "log med 100 trees Simulated"),
show.ci = F,
transform = NULL,
#file=paste(fig.dir, "median_sizes_models_transformed_new.html"),
show.intercept = F,
show.r2=T,
p.style = "stars",
show.p = T
)
p2 <- c(
`(Intercept)` = "Intercept",
`scale(sqrt(curr_medianBodySize))` = "sqrt(median Bodysize extant)",
`scale(sqrt(presNat_medianBodySize))` = "sqrt(median Bodysize extinct)",
`scale(I(MAT^2))` = "(Mean Annual Temperature)^2",
`scale(sqrt(TempSeas))` = "sqrt(Temperature Seasonality)",
`scale(sqrt(AnnualPrec))` = "sqrt(Annual Precipitation)",
`scale(sqrt(PrecSeas))` = "sqrt(Precipitation Seasonality)",
`scale(CH_Mean)` = "Canopy Height",
`scale(sqrt(CH_PercCover))` = "sqrt(Percentage Cover)",
`scale(log(medFL_palms_filled))` = "log(med Fruit length Palms)",
`scale(log(medFW_angios))` = "log(med Fruit width Angiosperms)",
`scale(sqrt(medSL_angios))` = "sqrt (med Seed length Angiosperms)",
`scale(log_medFL_palms_BBMmean)` = "log(med simulated Fruit length Palms (MCC tree))",
`scale(exp(log_medFL_palms_BBM_MCC))` = "med simulated Fruit length Palms (100 trees average))"
)
tab_model(
palms_med_mod, angioFW_med_mod, angioSL_med_mod, BBMmean_med_mod, BBM_MCC_med_mod,
pred.labels = p2,
dv.labels = c("log med Palms", "log med Fruit width Angiosperms", "sqrt med Seed length Angiosperms", "med MCC Simulated", "log med 100 trees Simulated"),
show.ci = F,
show.r2 = T,
transform = NULL,
#file=paste(fig.dir, "median_sizes_models_transformed_new.html"),
show.intercept = F,
show.r2=T,
p.style = "stars",
show.p = T
)
library(ape); library(evobiR); library(geiger); library(phytools); library(dplyr); library(rstatix); library(scales); library(viridis); library(ggplot2)
exp(0.542)
exp(1.191)
exp(1.191) / exp(0.542)
83/101
exp(0.775)
exp(0.525)
exp(0.775) / exp(0.525)
exp(0.955)/exp(1.174)
exp(1.174)/0.955
exp(1.174)/exp(0.955)
exp(0.955) * 1.244
exp(1.174)
exp(0.509) / exp(0.33)
0.33 * 1.2
0.509 / 0.33
dd_Afr %>% group_by(data, tree, model) %>% dplyr::summarize(
n_models = length(model)
)
library(dplyr)
dd_Afr %>% group_by(data, tree, model) %>% dplyr::summarize(
n_models = length(model)
)
# Libraries  =======================
library(tidyr); library(dplyr); library(scales); library(viridis); library(viridisLite); library(ggplot2)
# =======================
rm(list = ls())
# =======================
# 100 trees results:
# Afr_emp <- read.table("~/LinuxBackup/FruitSizeEvo_Project/OUwie_results_alltrees_MCC_final/merged_data_afr_avgl.txt", header=T)
# Afr_BBM <- read.table("~/LinuxBackup/FruitSizeEvo_Project/OUwie_results_alltrees_MCC_final/merged_data_afr_BBM.txt", header=T)
# md_emp <- read.table("~/LinuxBackup/FruitSizeEvo_Project/OUwie_results_alltrees_MCC_final/merged_data_md_avgl.txt", header=T)
# md_BBM <- read.table("~/LinuxBackup/FruitSizeEvo_Project/OUwie_results_alltrees_MCC_final/merged_data_md_BBM.txt", header=T)
# # MCC results:
# MCC <- read.table("~/LinuxBackup/FruitSizeEvo_Project/OUwie_results_alltrees_MCC_final/merged_MCC_all.txt", header=T)
Afr_emp <-  read.table("~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/bestfit_avgl_Afr.txt", header=T)
Afr_BBM <- read.table("~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/bestfit_BM_Afr.txt", header=T)
md_emp <- read.table("~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/bestfit_avgl_Md.txt", header=T)
md_BBM <- read.table("~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/bestfit_BM_Md.txt", header=T)
# make data id column (empirical, simulated)
Afr_emp$data <- "empirical"
md_emp$data <- "empirical"
Afr_BBM$data <- "simulated"
md_BBM$data <- "simulated"
MCC_Afr_emp <- Afr_emp %>% dplyr::filter(id == "ouwie_Afr_avgl_101")
MCC_Md_emp <- md_emp %>% dplyr::filter(id == "ouwie_md_avgl_101")
MCC_Afr_BM <- Afr_BBM %>% dplyr::filter(id == "ouwie_Afr_BM_101")
MCC_MD_BM <- md_BBM %>% dplyr::filter(id == "ouwie_md_BM_101")
MCC <- rbind(MCC_Afr_emp, MCC_Md_emp, MCC_Afr_BM, MCC_MD_BM)
unique(MCC$id)
# make regime id column (Africa/World, Moist/Dry)
Afr_emp$regime <- "Megafauna"
md_emp$regime <- "Vegetation"
Afr_BBM$regime <- "Megafauna"
md_BBM$regime <- "Vegetation"
MCC <- MCC %>% mutate(regime = ifelse(id %in% c("ouwie_Afr_BM_101", "ouwie_Afr_avgl_101"), "Megafauna", "Vegetation"))
# make MCC/set id column (MCC, set_trees)
Afr_emp$tree <- "set_trees"
md_emp$tree <- "set_trees"
Afr_BBM$tree <- "set_trees"
md_BBM$tree <- "set_trees"
MCC$tree <- "MCC"
# merge different regimes seperately
MCC_afr<-MCC %>% filter(regime == "Megafauna")
Afr_merged <- merge(Afr_emp, Afr_BBM, all=T)
Afr_merged <- merge(Afr_merged, MCC_afr, all=T)
MCC_md <- MCC %>% filter(regime == "Vegetation")
md_merged <- merge(md_emp, md_BBM, all=T)
md_merged <- merge(md_merged, MCC_md, all=T)
all_merged_wide <- merge(Afr_merged, md_merged, all=T)
#
write.table(all_merged_wide, file = "../Sensitivity_Analysis_Extinctions/work/out/all_merged_wide.txt", sep = "\t", row.names = F, col.names = T)
#
all_merged_wide
# transform parameters to long-format
## vegetation:
data_long_md <- gather(md_merged, parameter, value, c(theta0, theta_1, theta_se0, theta_se_1, sigma0, X1_sigma.sq, X0_alpha, X1_alpha), factor_key=TRUE)
str(data_long_md)
head(data_long_md)
# round values
data_long_md$value <- round(as.numeric(data_long_md$value),3)
data_long_md$w <- round(data_long_md$w, 2)
data_long_md$delta <- round(data_long_md$delta, 2)
## megafauna:
data_long_Afr <- gather(Afr_merged, parameter, value, c(theta0, theta_1, theta_se0, theta_se_1, sigma0, X1_sigma.sq, X0_alpha, X1_alpha), factor_key=TRUE)
str(data_long_Afr)
head(data_long_Afr)
# round values
data_long_Afr$value <- round(as.numeric(data_long_Afr$value),3)
data_long_Afr$w <- round(data_long_Afr$w, 2)
data_long_Afr$delta <- round(data_long_Afr$delta, 2)
# merge to masterfile ============================================================
dd_master <- merge(data_long_md, data_long_Afr, all=T)
head(dd_master)
summary(dd_master)
str(dd_master)
dd_master$data <- as.factor(dd_master$data)
dd_master$regime <- as.factor(dd_master$regime)
dd_master$tree <- as.factor(dd_master$tree)
#write.table(dd_master, file = "master_file_long_emp_sim.txt", sep = "\t", row.names = F, col.names = T)
# ================================================================================
# dataframes grouped by variables:
## megafauna
data_long_Afr_sep <- gather(Afr_merged, g_logTheta, v_logTheta, c(theta0, theta_1), factor_key=TRUE)
data_long_Afr_sep <- gather(data_long_Afr_sep, g_logThetaSE, v_logThetaSE, c(theta_se0, theta_se_1), factor_key=TRUE)
data_long_Afr_sep <- gather(data_long_Afr_sep, g_sigma, v_sigma, c(sigma0, X1_sigma.sq), factor_key=TRUE)
data_long_Afr_sep <- gather(data_long_Afr_sep, g_alpha, v_alpha, c(X0_alpha, X1_alpha), factor_key=TRUE)
head(data_long_Afr_sep)
## vegetation
data_long_md_sep <- gather(md_merged, g_logTheta, v_logTheta, c(theta0, theta_1), factor_key=TRUE)
data_long_md_sep <- gather(data_long_md_sep, g_logThetaSE, v_logThetaSE, c(theta_se0, theta_se_1), factor_key=TRUE)
data_long_md_sep <- gather(data_long_md_sep, g_sigma, v_sigma, c(sigma0, X1_sigma.sq), factor_key=TRUE)
data_long_md_sep <- gather(data_long_md_sep, g_alpha, v_alpha, c(X0_alpha, X1_alpha), factor_key=TRUE)
head(data_long_md_sep)
# merge to parameter seperated masterfile ============================================================
dd_master_sep <- merge(data_long_md_sep, data_long_Afr_sep, all=T)
head(dd_master_sep)
summary(dd_master_sep)
str(dd_master_sep)
dd_master_sep$data <- as.factor(dd_master_sep$data)
dd_master_sep$regime <- as.factor(dd_master_sep$regime)
dd_master_sep$tree <- as.factor(dd_master_sep$tree)
#write.table(dd_master_sep, file = "master_file_long_sep_emp_sim.txt", sep = "\t", row.names = F, col.names = T)
# ================================================================================
dd_master_bestfit_sep <- subset(dd_master_sep, delta==0)
head(dd_master_bestfit_sep)
multi_theta <- dd_master_bestfit_sep %>% filter(model %in% c("OUM", "OUMV", "OUMVA", "OUMA"), data == "empirical")
multi_sigma <- dd_master_bestfit_sep %>% filter(model %in% c("OUMV"), data == "empirical")
MCC_best_sep <- dd_master_bestfit_sep %>%filter(tree == "MCC" & regime == "Vegetation", data == "empirical")
afr_multi_theta <- multi_theta %>% filter(regime == "Megafauna")
afr_multi_theta_MCC <- afr_multi_theta %>% filter(tree == "MCC")
md_multi_theta <- multi_theta %>% filter(regime == "Vegetation")
md_multi_theta_MCC <- md_multi_theta %>% filter(tree == "MCC")
afr_multi_sigma <- multi_sigma %>% filter(regime == "Megafauna")
afr_multi_sigma_MCC <- afr_multi_sigma %>% filter(tree == "MCC")
md_multi_sigma <- multi_sigma %>% filter(regime == "Vegetation")
md_multi_sigma_MCC <- md_multi_sigma %>% filter(tree == "MCC")
# =================================
# ================================================================================
MCC_best <- MCC %>% filter(delta == 0)
all_best <- all_merged_wide %>% filter(delta==0)
MCC_best %>% select(c(id, model, w))
## Fig 1: proportion of selected models ===============
dd_Afr <- Afr_merged
write.csv(dd_Afr, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/dd_Africa_all.csv")
dd_md <- md_merged
write.csv(dd_md, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/dd_MoistDry_all.csv")
dd_Afr %>% group_by(data, tree, model) %>% dplyr::summarize(
n_models = length(model)
)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model)
)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model)
mean_theta0 = mean(theta0)
dd_Afr
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = mean(theta0)
)
dd_Afr
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = mean(theta0),
mean_theta1 = mean(theta_1),
mean_sigma0 = mean(sigma0),
mean_simga1 = mean(X1_sigma.sq),
mean_alpha0 = mean(X0_alpha),
mean_alpha1 = mean(X1_alpha)
)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha)2)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_Afr <- dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_Afr <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_md <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_md
Ouwie_Afr <- dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_md
rbind(Ouwie_Afr, Ouwie_md)
Ouwie_res <- rbind(Ouwie_Afr, Ouwie_md)
write.csv(Ouwie_res, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/OuwieSummary_all.csv")
Ouwie_md <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2),
meanW = round(mean(w),2)
)
Ouwie_Afr <- dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2),
meanW = round(mean(w),2)
)
Ouwie_md <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2),
meanW = round(mean(w),2)
)
Ouwie_res <- rbind(Ouwie_Afr, Ouwie_md)
write.csv(Ouwie_res, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/OuwieSummary_all.csv")
write.csv(Ouwie_res, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/OuwieSummary_all.csv")
# Libraries  =======================
library(tidyr); library(dplyr); library(scales); library(viridis); library(viridisLite); library(ggplot2)
# =======================
rm(list = ls())
# 100 trees results:
Afr_emp <- read.table("merged_data_AVGL.txt", header=T)
Afr_BBM <- read.table("merged_data_BM.txt", header=T)
0.02 * (25)^2
0.02 * (10)^2
0.02 * (30)^2
0.02 * (26)^2
0.02 * (27)^2
0.02 * (1)^2
0.02 * (2)^2
0.02 * (3)^2
1^2
2^2
0.08 * sqrt(1)
0.08 * sqrt(10)
0.08 * sqrt(100)
0.08 * sqrt(1000)
223.28-214.6
## Models with convergence problems ##
setwd("~/GitHub/FruitsAfrica/Data/OUwie/out")
Afr_avgl <- read.table("issues_AVGL.txt", header=T)
Afr_BM <- read.table("issues_BM.txt", header=T)
Afr_avgl$regime <- "Africa"
Afr_avgl$dat <- "empirical"
Afr_BM$regime <- "Africa"
Afr_BM$dat <- "simulated"
Afr_avgl$group <- "Afr_emp"
Afr_BM$group <- "Afr_BM"
Africa <- merge(Afr_avgl, Afr_BM, all=T)
str(Africa)
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="a) Observed fruit sizes ")+
theme_classic()
Africa %>% filter(dat == "simulated") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="b) Simulated fruit sizes ")+
theme_classic()
###############################################################################
library(dplyr)
library(rstatix)
library(ggplot2)
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="a) Observed fruit sizes ")+
theme_classic()
Africa %>% filter(dat == "simulated") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="b) Simulated fruit sizes ")+
theme_classic()
