MCC <- rbind(MCC_Afr_emp, MCC_Md_emp, MCC_Afr_BM, MCC_MD_BM)
unique(MCC$id)
# make regime id column (Africa/World, Moist/Dry)
Afr_emp$regime <- "Megafauna"
md_emp$regime <- "Vegetation"
Afr_BBM$regime <- "Megafauna"
md_BBM$regime <- "Vegetation"
MCC <- MCC %>% mutate(regime = ifelse(id %in% c("ouwie_Afr_BM_101", "ouwie_Afr_avgl_101"), "Megafauna", "Vegetation"))
# make MCC/set id column (MCC, set_trees)
Afr_emp$tree <- "set_trees"
md_emp$tree <- "set_trees"
Afr_BBM$tree <- "set_trees"
md_BBM$tree <- "set_trees"
MCC$tree <- "MCC"
# merge different regimes seperately
MCC_afr<-MCC %>% filter(regime == "Megafauna")
Afr_merged <- merge(Afr_emp, Afr_BBM, all=T)
Afr_merged <- merge(Afr_merged, MCC_afr, all=T)
MCC_md <- MCC %>% filter(regime == "Vegetation")
md_merged <- merge(md_emp, md_BBM, all=T)
md_merged <- merge(md_merged, MCC_md, all=T)
all_merged_wide <- merge(Afr_merged, md_merged, all=T)
#
write.table(all_merged_wide, file = "../Sensitivity_Analysis_Extinctions/work/out/all_merged_wide.txt", sep = "\t", row.names = F, col.names = T)
#
all_merged_wide
# transform parameters to long-format
## vegetation:
data_long_md <- gather(md_merged, parameter, value, c(theta0, theta_1, theta_se0, theta_se_1, sigma0, X1_sigma.sq, X0_alpha, X1_alpha), factor_key=TRUE)
str(data_long_md)
head(data_long_md)
# round values
data_long_md$value <- round(as.numeric(data_long_md$value),3)
data_long_md$w <- round(data_long_md$w, 2)
data_long_md$delta <- round(data_long_md$delta, 2)
## megafauna:
data_long_Afr <- gather(Afr_merged, parameter, value, c(theta0, theta_1, theta_se0, theta_se_1, sigma0, X1_sigma.sq, X0_alpha, X1_alpha), factor_key=TRUE)
str(data_long_Afr)
head(data_long_Afr)
# round values
data_long_Afr$value <- round(as.numeric(data_long_Afr$value),3)
data_long_Afr$w <- round(data_long_Afr$w, 2)
data_long_Afr$delta <- round(data_long_Afr$delta, 2)
# merge to masterfile ============================================================
dd_master <- merge(data_long_md, data_long_Afr, all=T)
head(dd_master)
summary(dd_master)
str(dd_master)
dd_master$data <- as.factor(dd_master$data)
dd_master$regime <- as.factor(dd_master$regime)
dd_master$tree <- as.factor(dd_master$tree)
#write.table(dd_master, file = "master_file_long_emp_sim.txt", sep = "\t", row.names = F, col.names = T)
# ================================================================================
# dataframes grouped by variables:
## megafauna
data_long_Afr_sep <- gather(Afr_merged, g_logTheta, v_logTheta, c(theta0, theta_1), factor_key=TRUE)
data_long_Afr_sep <- gather(data_long_Afr_sep, g_logThetaSE, v_logThetaSE, c(theta_se0, theta_se_1), factor_key=TRUE)
data_long_Afr_sep <- gather(data_long_Afr_sep, g_sigma, v_sigma, c(sigma0, X1_sigma.sq), factor_key=TRUE)
data_long_Afr_sep <- gather(data_long_Afr_sep, g_alpha, v_alpha, c(X0_alpha, X1_alpha), factor_key=TRUE)
head(data_long_Afr_sep)
## vegetation
data_long_md_sep <- gather(md_merged, g_logTheta, v_logTheta, c(theta0, theta_1), factor_key=TRUE)
data_long_md_sep <- gather(data_long_md_sep, g_logThetaSE, v_logThetaSE, c(theta_se0, theta_se_1), factor_key=TRUE)
data_long_md_sep <- gather(data_long_md_sep, g_sigma, v_sigma, c(sigma0, X1_sigma.sq), factor_key=TRUE)
data_long_md_sep <- gather(data_long_md_sep, g_alpha, v_alpha, c(X0_alpha, X1_alpha), factor_key=TRUE)
head(data_long_md_sep)
# merge to parameter seperated masterfile ============================================================
dd_master_sep <- merge(data_long_md_sep, data_long_Afr_sep, all=T)
head(dd_master_sep)
summary(dd_master_sep)
str(dd_master_sep)
dd_master_sep$data <- as.factor(dd_master_sep$data)
dd_master_sep$regime <- as.factor(dd_master_sep$regime)
dd_master_sep$tree <- as.factor(dd_master_sep$tree)
#write.table(dd_master_sep, file = "master_file_long_sep_emp_sim.txt", sep = "\t", row.names = F, col.names = T)
# ================================================================================
dd_master_bestfit_sep <- subset(dd_master_sep, delta==0)
head(dd_master_bestfit_sep)
multi_theta <- dd_master_bestfit_sep %>% filter(model %in% c("OUM", "OUMV", "OUMVA", "OUMA"), data == "empirical")
multi_sigma <- dd_master_bestfit_sep %>% filter(model %in% c("OUMV"), data == "empirical")
MCC_best_sep <- dd_master_bestfit_sep %>%filter(tree == "MCC" & regime == "Vegetation", data == "empirical")
afr_multi_theta <- multi_theta %>% filter(regime == "Megafauna")
afr_multi_theta_MCC <- afr_multi_theta %>% filter(tree == "MCC")
md_multi_theta <- multi_theta %>% filter(regime == "Vegetation")
md_multi_theta_MCC <- md_multi_theta %>% filter(tree == "MCC")
afr_multi_sigma <- multi_sigma %>% filter(regime == "Megafauna")
afr_multi_sigma_MCC <- afr_multi_sigma %>% filter(tree == "MCC")
md_multi_sigma <- multi_sigma %>% filter(regime == "Vegetation")
md_multi_sigma_MCC <- md_multi_sigma %>% filter(tree == "MCC")
# =================================
# ================================================================================
MCC_best <- MCC %>% filter(delta == 0)
all_best <- all_merged_wide %>% filter(delta==0)
MCC_best %>% select(c(id, model, w))
## Fig 1: proportion of selected models ===============
dd_Afr <- Afr_merged
write.csv(dd_Afr, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/dd_Africa_all.csv")
dd_md <- md_merged
write.csv(dd_md, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/dd_MoistDry_all.csv")
dd_Afr %>% group_by(data, tree, model) %>% dplyr::summarize(
n_models = length(model)
)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model)
)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model)
mean_theta0 = mean(theta0)
dd_Afr
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = mean(theta0)
)
dd_Afr
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = mean(theta0),
mean_theta1 = mean(theta_1),
mean_sigma0 = mean(sigma0),
mean_simga1 = mean(X1_sigma.sq),
mean_alpha0 = mean(X0_alpha),
mean_alpha1 = mean(X1_alpha)
)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha)2)
dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_Afr <- dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_Afr <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_md <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_md
Ouwie_Afr <- dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2)
)
Ouwie_md
rbind(Ouwie_Afr, Ouwie_md)
Ouwie_res <- rbind(Ouwie_Afr, Ouwie_md)
write.csv(Ouwie_res, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/OuwieSummary_all.csv")
Ouwie_md <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2),
meanW = round(mean(w),2)
)
Ouwie_Afr <- dd_Afr %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2),
meanW = round(mean(w),2)
)
Ouwie_md <- dd_md %>% group_by(data, tree, model, regime) %>% dplyr::summarize(
n_models = length(model),
mean_theta0 = round(mean(theta0),2),
mean_theta1 = round(mean(theta_1),2),
mean_sigma0 = round(mean(sigma0),2),
mean_simga1 = round(mean(X1_sigma.sq),2),
mean_alpha0 = round(mean(X0_alpha),2),
mean_alpha1 = round(mean(X1_alpha),2),
meanW = round(mean(w),2)
)
Ouwie_res <- rbind(Ouwie_Afr, Ouwie_md)
write.csv(Ouwie_res, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/OuwieSummary_all.csv")
write.csv(Ouwie_res, "~/LinuxBackup/FruitSizeEvo_Project/Sensitivity_Analysis_Extinctions/work/out/OuwieSummary_all.csv")
# Libraries  =======================
library(tidyr); library(dplyr); library(scales); library(viridis); library(viridisLite); library(ggplot2)
# =======================
rm(list = ls())
# 100 trees results:
Afr_emp <- read.table("merged_data_AVGL.txt", header=T)
Afr_BBM <- read.table("merged_data_BM.txt", header=T)
0.02 * (25)^2
0.02 * (10)^2
0.02 * (30)^2
0.02 * (26)^2
0.02 * (27)^2
0.02 * (1)^2
0.02 * (2)^2
0.02 * (3)^2
1^2
2^2
0.08 * sqrt(1)
0.08 * sqrt(10)
0.08 * sqrt(100)
0.08 * sqrt(1000)
223.28-214.6
## 2.2 all models (1. group by model, 2. filter for OUMV, OUMVA, 3. plot MCC results as means)
# Libraries  =======================
library(tidyr); library(dplyr); library(scales); library(viridis); library(viridisLite); library(ggplot2)
setwd(dir = "Data/OUwie/out/")
# =======================
rm(list = ls())
setwd("~/Data/OUwie/out")
setwd("~/GitHub/FruitsAfrica/Data/OUwie/out")
Afr_avgl <- read.table("issues_AVGL.txt", header=T)
Afr_BM <- read.table("issues_BM.txt", header=T)
<- read.table("issues_BM.txt", header=T)
Afr_BM
Afr_avgl$regime <- "Africa"
Afr_avgl$dat <- "empirical"
Afr_BM$regime <- "Africa"
Afr_BM$dat <- "simulated"
Afr_avgl$group <- "Afr_emp"
Afr_BM$group <- "Afr_BM"
Africa <- merge(Afr_avgl, Afr_BM, all=T)
Africa
t(Africa)
table(Africa)
str(Africa)
ggplot()+
geom_bar(data=Africa, aes(x=model), fill="grey")+
facet_grid(group~.)+
labs(title="Models which failed to converge")+
theme_classic()
ggplot()+ filter(dat == "empirical") %>%
geom_bar(data=Africa, aes(x=model), fill="grey")+
facet_grid(group~.)+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=model), fill="grey")+
facet_grid(group~.)+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=model), fill="grey")+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=model), fill="grey")+
stat_n_text()+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=model), fill="grey")+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=factor(model)), fill="grey")+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=factor(model)), fill="grey")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=factor(model)), fill="grey")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=factor(model)), fill="grey")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
ylim(0, 100)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot()+
geom_bar(aes(x=factor(model)), fill="grey")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
#geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
ylim(0, 100)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+)+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
#geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
ylim(0, 100)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
#geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
ylim(0, 100)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
ylim(0, 100)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Models which failed to converge")+
ylim(0, 105)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
labs(title="Convergence problems")+
ylim(0, 105)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
theme_classic()
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="a) Observed fruit sizes ")
Africa %>% filter(dat == "empirical") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="a) Observed fruit sizes ")+
theme_classic()
Africa %>% filter(dat == "simulated") %>%
ggplot(aes(x = factor(model)))+
geom_bar(width=.7, position="dodge2")+
scale_x_discrete(NULL, limits = c("BM1", "BMS", "OU1", "OUM", "OUMV", "OUMA", "OUMVA"), drop = FALSE)+
theme(text= element_text(color="black"),
title=element_text(size=15, color = "black"),
axis.text=element_text(size=11.5, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size=15, color="black"),
axis.title.x = element_text(size=15, color="black"),
axis.text.y = element_text(size=15, color="black"),
axis.title.y = element_text(size=15),
legend.title = element_text(size=15),
legend.text = element_text(size=10))+
geom_text(aes(label = ifelse(..count.. > 0, paste0("n = ", ..count..), "")),  stat = "count", nudge_y = 3)+
ylim(0, 105)+
labs(x = "Evolutionary Trait Models",
y = "Proportion of convergence failures",
title ="a) Simulated fruit sizes ")+
theme_classic()
